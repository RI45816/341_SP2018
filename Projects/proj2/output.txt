[New Thread 17828.0x3308]
[New Thread 17828.0x5ca0]
[New Thread 17828.0xe90]
[New Thread 17828.0x24cc]
[New Thread 17828.0x5c2c]
[New Thread 17828.0x4750]
$1 = 0
Hardware watchpoint 1: *0x60005f060

Old value = <unreadable>
New value = 4220320
0x00000001004011f2 in DNode::DNode (this=0x60005f060, data={m_data = -13812, static m_debug = false, static m_constructor_calls = 136, static m_copy_constr_calls = 269, static m_destructor_calls = 268, static m_assignment_calls = 0}) at DNode.cpp:63
63	DNode::DNode(Int341 data) : m_data(Int341(data)), m_next(NULL)
#0  0x00000001004011f2 in DNode::DNode (this=0x60005f060, data={m_data = -13812, static m_debug = false, static m_constructor_calls = 136, static m_copy_constr_calls = 269, static m_destructor_calls = 268, static m_assignment_calls = 0}) at DNode.cpp:63
#1  0x000000010040299d in SqList::add (this=this@entry=0xffffcaf0, data=@0xffffcb30: {m_data = 650, static m_debug = false, static m_constructor_calls = 136, static m_copy_constr_calls = 269, static m_destructor_calls = 268, static m_assignment_calls = 0}) at SqList.cpp:127
#2  0x0000000100403606 in main () at p2comptest.cpp:149
Print value of expression EXP.
Variables accessible are those of the lexical environment of the selected
stack frame, plus all those whose scope is global or an entire file.

$NUM gets previous value number NUM.  $ and $$ are the last two values.
$$NUM refers to NUM'th value back from the last one.
Names starting with $ refer to registers (with the values they would have
if the program were to return to the stack frame now selected, restoring
all registers saved by frames farther in) or else to debugger
"convenience" variables (any such name not a known register).
Use assignment expressions to give values to convenience variables.

{TYPE}ADREXP refers to a datum of data type TYPE, located at address ADREXP.
@ is a binary operator for treating consecutive data objects
anywhere in memory as an array.  FOO@NUM gives an array whose first
element is FOO, whose second element is stored in the space following
where FOO is stored, etc.  FOO must be an expression whose value
resides in memory.

EXP may be preceded with /FMT, where FMT is a format letter
but no count or size letter (see "x" command).
Set printing of non-scalar frame arguments
#0  0x00000001004011f2 in DNode::DNode (this=0x60005f060, data=...) at DNode.cpp:63
#1  0x000000010040299d in SqList::add (this=this@entry=0xffffcaf0, data=...) at SqList.cpp:127
#2  0x0000000100403606 in main () at p2comptest.cpp:149
#1  0x000000010040299d in SqList::add (this=this@entry=0xffffcaf0, data=...) at SqList.cpp:127
127	        m_first = new DNode(data);
[New Thread 17828.0x2514]
65	}
SqList::add (this=this@entry=0xffffcaf0, data=...) at SqList.cpp:128
128	        printf("'*(DNode*)%p',",m_first);
$2 = (SqList) {
  _vptr.SqList = 0x1004065e0 <vtable for SqList+16>, 
  m_iList = std::list = {
    [0] = {
      _vptr.INode = 0x1004065c0 <vtable for INode+16>, 
      m_dNode = 0x60005f040, 
      m_size = 21
    },
    [1] = {
      _vptr.INode = 0x1004065c0 <vtable for INode+16>, 
      m_dNode = 0x60005ed40, 
      m_size = 11
    },
    [2] = {
      _vptr.INode = 0x1004065c0 <vtable for INode+16>, 
      m_dNode = 0x60005e000, 
      m_size = 11
    },
    [3] = {
      _vptr.INode = 0x1004065c0 <vtable for INode+16>, 
      m_dNode = 0x600029590, 
      m_size = 10
    },
    [4] = {
      _vptr.INode = 0x1004065c0 <vtable for INode+16>, 
      m_dNode = 0x60005e050, 
      m_size = 6
    },
    [5] = {
      _vptr.INode = 0x1004065c0 <vtable for INode+16>, 
      m_dNode = 0x60005e140, 
      m_size = 7
    },
    [6] = {
      _vptr.INode = 0x1004065c0 <vtable for INode+16>, 
      m_dNode = 0x60005e250, 
      m_size = 7
    },
    [7] = {
      _vptr.INode = 0x1004065c0 <vtable for INode+16>, 
      m_dNode = 0x60005e340, 
      m_size = 8
    },
    [8] = {
      _vptr.INode = 0x1004065c0 <vtable for INode+16>, 
      m_dNode = 0x60005e470, 
      m_size = 8
    },
    [9] = {
      _vptr.INode = 0x1004065c0 <vtable for INode+16>, 
      m_dNode = 0x60005e5a0, 
      m_size = 9
    },
    [10] = {
      _vptr.INode = 0x1004065c0 <vtable for INode+16>, 
      m_dNode = 0x60005e6f0, 
      m_size = 10
    },
    [11] = {
      _vptr.INode = 0x1004065c0 <vtable for INode+16>, 
      m_dNode = 0x60005e860, 
      m_size = 10
    },
    [12] = {
      _vptr.INode = 0x1004065c0 <vtable for INode+16>, 
      m_dNode = 0x60005e9d0, 
      m_size = 16
    }
  }, 
  m_size = 135, 
  m_first = 0x60005f060, 
  m_last = 0x60005ebe0, 
  static debug_count = 0
}
$3 = (DNode) {
  _vptr.DNode = 0x1004065a0 <vtable for DNode+16>, 
  m_data = {
    m_data = 650, 
    static m_debug = false, 
    static m_constructor_calls = 136, 
    static m_copy_constr_calls = 270, 
    static m_destructor_calls = 269, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x0
}
Continuing.
[New Thread 17828.0x2f0c]
Hardware watchpoint 1: *0x60005f060

Old value = 4220320
New value = 389376
0x000000018015775f in dlfree () from /usr/bin/cygwin1.dll
#0  0x000000018015775f in dlfree () from /usr/bin/cygwin1.dll
#1  0x00000001800ba6d3 in free () from /usr/bin/cygwin1.dll
#2  0x000000018011973b in _sigfe () from /usr/bin/cygwin1.dll
#3  0x0000000100401120 in DNode::~DNode (this=0x60005f060, __in_chrg=<optimized out>) at DNode.cpp:57
#4  0x0000000100402747 in SqList::removeAt (this=this@entry=0xffffcaf0, pos=<optimized out>) at SqList.cpp:225
#5  0x0000000100402842 in SqList::remove (this=this@entry=0xffffcaf0, data=...) at SqList.cpp:166
#6  0x00000001004037c5 in main () at p2comptest.cpp:168
#0  0x00000001800ba6d3 in free () from /usr/bin/cygwin1.dll
#0  0x000000018011973b in _sigbe () from /usr/bin/cygwin1.dll
#0  0x0000000100401120 in DNode::~DNode (this=0x60005f060, __in_chrg=<optimized out>) at DNode.cpp:57
57	}
#0  SqList::removeAt (this=this@entry=0xffffcaf0, pos=<optimized out>) at SqList.cpp:248
248	    m_size--;
243	        //        m_iList.back().changeSize(-1);
244	        //        m_size--;
245	        //        getNthNodeInSegment(m_iList.end(),pos-m_iList.back().GetSize()-1);
246	        //    }   
247	    }
248	    m_size--;
249	    consolidate();
250	    return element;
251	}
252	
#0  SqList::removeAt (this=this@entry=0xffffcaf0, pos=<optimized out>) at SqList.cpp:248
#1  0x0000000100402842 in SqList::remove (this=this@entry=0xffffcaf0, data=...) at SqList.cpp:166
#2  0x00000001004037c5 in main () at p2comptest.cpp:168
Target native does not support this command.
Cannot access memory at address 0x6005f060
$4 = {
  _vptr.DNode = 0x60005f100, 
  m_data = {
    m_data = 0, 
    static m_debug = false, 
    static m_constructor_calls = 308, 
    static m_copy_constr_calls = 411, 
    static m_destructor_calls = 618, 
    static m_assignment_calls = 207
  }, 
  m_next = 0x20
}
249	    consolidate();
Continuing.
[New Thread 17828.0x55a4]
[Thread 17828.0x5c2c exited with code 2543124480]
[Thread 17828.0x55a4 exited with code 0]
Hardware watchpoint 1: *0x60005f060

Old value = 389376
New value = 4220320
0x00000001004011a6 in DNode::DNode (this=0x60005f060, other=...) at DNode.cpp:38
38	DNode::DNode(const DNode& other) : m_data(Int341(other.m_data)), m_next(0) {
#0  0x00000001004011a6 in DNode::DNode (this=0x60005f060, other=...) at DNode.cpp:38
#1  0x0000000100401ee4 in SqList::SqList (this=0xffffcab0, other=...) at SqList.cpp:43
#2  0x0000000100403883 in main () at p2comptest.cpp:175
#1  0x0000000100401ee4 in SqList::SqList (this=0xffffcab0, other=...) at SqList.cpp:43
43	SqList::SqList(const SqList& other) : m_size(other.m_size), m_first(new DNode(*other.m_first)), m_last(new DNode(*other.m_last)) {
38	
39	/*
40	 *  Method: SqList::SqList()
41	 *   Descr: Copy constructor for SqList
42	 */
43	SqList::SqList(const SqList& other) : m_size(other.m_size), m_first(new DNode(*other.m_first)), m_last(new DNode(*other.m_last)) {
44	    for (DNode * curNode = m_first, * curOtherNode = other.m_first->getNext(); curOtherNode; curNode=curNode->getNext(), curOtherNode=curOtherNode->getNext()) {
45	        curNode->m_next = (new DNode(*curOtherNode));
46	        printf("'*(DNode*)%p',",curNode->getNext());
47	    }
$5 = (SqList) {
  _vptr.SqList = 0x1004065e0 <vtable for SqList+16>, 
  m_iList = empty std::list, 
  m_size = 97, 
  m_first = 0x60005efe0, 
  m_last = 0x0, 
  static debug_count = 0
}
39	}
SqList::SqList (this=0xffffcab0, other=...) at SqList.cpp:44
44	    for (DNode * curNode = m_first, * curOtherNode = other.m_first->getNext(); curOtherNode; curNode=curNode->getNext(), curOtherNode=curOtherNode->getNext()) {
$6 = (SqList) {
  _vptr.SqList = 0x1004065e0 <vtable for SqList+16>, 
  m_iList = empty std::list, 
  m_size = 97, 
  m_first = 0x60005efe0, 
  m_last = 0x60005f060, 
  static debug_count = 0
}
$7 = (DNode) {
  _vptr.DNode = 0x1004065a0 <vtable for DNode+16>, 
  m_data = {
    m_data = 500, 
    static m_debug = false, 
    static m_constructor_calls = 310, 
    static m_copy_constr_calls = 414, 
    static m_destructor_calls = 624, 
    static m_assignment_calls = 210
  }, 
  m_next = 0x0
}
$8 = (DNode) {
  _vptr.DNode = 0x1004065a0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1490, 
    static m_debug = false, 
    static m_constructor_calls = 310, 
    static m_copy_constr_calls = 414, 
    static m_destructor_calls = 624, 
    static m_assignment_calls = 210
  }, 
  m_next = 0x0
}
Breakpoint 4 at 0x100401ee8: file SqList.cpp, line 44.
Num     Type           Disp Enb Address            What
1       hw watchpoint  keep y                      *0x60005f060
	breakpoint already hit 3 times
2       hw watchpoint  keep y                      *0x10040a040
	stop only if SqList::debug_count >= 297
        nt
        bt
3       breakpoint     keep y   0x000000010040356d in main() at p2comptest.cpp:134
	breakpoint already hit 1 time
        silent
        call dup2(open("input.txt", 0), 0)
        continue
Hardware watchpoint 5: *0x10040a040
Num     Type           Disp Enb Address            What
1       hw watchpoint  keep y                      *0x60005f060
	breakpoint already hit 3 times
2       hw watchpoint  keep y                      *0x10040a040
	stop only if SqList::debug_count >= 297
        nt
        bt
3       breakpoint     keep y   0x000000010040356d in main() at p2comptest.cpp:134
	breakpoint already hit 1 time
        silent
        call dup2(open("input.txt", 0), 0)
        continue
5       hw watchpoint  keep y                      *0x10040a040
	stop only if SqList::debug_count >= 0 && curNode == 0x60005f060
        bt
#0  SqList::SqList (this=0xffffcab0, other=...) at SqList.cpp:44
#1  0x0000000100403883 in main () at p2comptest.cpp:175
