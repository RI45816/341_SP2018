==> MinMaxHeap.h <==
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/*****************************************
 ** File:    MinMaxHeap.h
 ** Project: CMSC 341 proj4, Spring 2017
 ** Author:  Uzoma Uwanamodo
 ** Date:    05/04/2018
 ** E-mail:  uu3@umbc.edu
 ** 
 ** This file contains the header for the MinMaxHeap class.
 ** 
 ** 
 ** 
 ** 
 *********************************************/

#ifndef MINMAXHEAP_H
#define MINMAXHEAP_H


#define TWIN 2

template<typename T>
class MinMaxHeap {
public:

    template<typename T>
    class Heap {
    public:
    // default constructor
        Heap(int capacity);
        
        
        void dump();
    private:
        int * indices; // stores item indexes for twin heap
        T * elements; // Store the elements
        
    };
    // default constructor
    MinMaxHeap(int capacity);

    // copy constructor
    MinMaxHeap(const MinMaxHeap<T>& other);

    // overloaded assignment operator
    const MinMaxHeap<T>& operator=(const MinMaxHeap<T>& rhs);

    // destructor
    ~MinMaxHeap();

   // returns the number of items in the min-max heap
   int size() ;

   // adds the item given in the parameter to the min-max heap
   void insert(const T& data) ;

   // removes the smallest item in the min-max heap and returns the key value of the deleted item
   T deleteMin() ;

   // removes the largest item in the min-max heap and returns the key value of the deleted item
   T deleteMax() ;

   // prints out the contents of the min-max heap including the positions of each key in the min-heap and the max-heap along with recorded position of its "twin"
   void dump() ;

   // Find 
   void locateMin(int pos, T& data, int& index) ;

   //
   void locateMax(int pos, T& data, int& index) ;

    
    private:
        Heap heaps[TWIN]; // Store the heaps

};

#endif /* MINMAXHEAP_H */


==> MinMaxHeap.cpp <==
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/*****************************************
 ** File:    MinMaxHeap.cpp
 ** Project: CMSC 341 proj4, Spring 2018
 ** Author:  Uzoma Uwanamodo
 ** Date:    05/04/2018
 ** E-mail:  uu3@umbc.edu
 ** 
 ** This file contains the definition for the MinMaxHeap class.
 ** 
 ** 
 ** 
 ** 
 *********************************************/
#include <iostream>
#include "MinMaxHeap.h"

using namespace std;

/*
 *  Method: MinMaxHeap<T>::MinMaxHeap()
 *   Descr: Default constructor for MinMaxHeap
 */
template <typename T>
MinMaxHeap<T>::MinMaxHeap(int capacity) {
}

/*
 *  Method: MinMaxHeap<T>::MinMaxHeap()
 *   Descr: Copy constructor for MinMaxHeap
 */
template <typename T>
MinMaxHeap<T>::MinMaxHeap(const MinMaxHeap<T>& other) {
}

/*
 *  Method: MinMaxHeap<T>::operator=()
 *   Descr: Overloaded assignment operator for MinMaxHeap
 */
template <typename T>
const MinMaxHeap<T> & MinMaxHeap<T>::operator=(const MinMaxHeap<T> &rhs) {
}

/*
 *  Method: MinMaxHeap<T>::MinMaxHeap()
 *   Descr: Destructor method for MinMaxHeap
 */
template <typename T>
MinMaxHeap<T>::~MinMaxHeap() {
}

	/*------------------------------------------------------------------------------*/
