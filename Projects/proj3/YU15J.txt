GNU gdb (GDB) (Cygwin 7.10.1-1) 7.10.1
Copyright (C) 2015 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-pc-cygwin".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from p2comptest...done.
Delete all auto-display expressions? (y or n) [answered Y; input not from terminal]
Breakpoint 1 at 0x100401893: file SqList.cpp, line 68.
Breakpoint 2 at 0x10040309a: file p2comptest.cpp, line 135.
[New Thread 12600.0x36cc]
[New Thread 12600.0xd4]
[New Thread 12600.0x2514]
[New Thread 12600.0x5ff4]
[New Thread 12600.0x323c]
[New Thread 12600.0x3020]
$1 = 0

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 1
-------------------------
0 (1) : 1000 
$2 = void
$3 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 1
}
$4 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 3, 
    static m_copy_constr_calls = 2, 
    static m_destructor_calls = 2, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x0
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 2
-------------------------
0 (2) : 1000 1010 
$5 = void
$6 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 2
}
$7 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 4, 
    static m_copy_constr_calls = 4, 
    static m_destructor_calls = 4, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 3
-------------------------
0 (3) : 1000 1010 1020 
$8 = void
$9 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 3
}
$10 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 5, 
    static m_copy_constr_calls = 6, 
    static m_destructor_calls = 6, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 4
-------------------------
0 (2) : 1000 1010 
1 (2) : 1020 1030 
$11 = void
$12 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 2
}
$13 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 6, 
    static m_copy_constr_calls = 8, 
    static m_destructor_calls = 8, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}
$14 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029310, 
  m_size = 2
}
$15 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1020, 
    static m_debug = false, 
    static m_constructor_calls = 6, 
    static m_copy_constr_calls = 8, 
    static m_destructor_calls = 8, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029330
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 5
-------------------------
0 (2) : 1000 1010 
1 (3) : 1020 1030 1040 
$16 = void
$17 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 2
}
$18 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 7, 
    static m_copy_constr_calls = 10, 
    static m_destructor_calls = 10, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}
$19 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029310, 
  m_size = 3
}
$20 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1020, 
    static m_debug = false, 
    static m_constructor_calls = 7, 
    static m_copy_constr_calls = 10, 
    static m_destructor_calls = 10, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029330
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 6
-------------------------
0 (2) : 1000 1010 
1 (4) : 1020 1030 1040 1050 
$21 = void
$22 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 2
}
$23 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 8, 
    static m_copy_constr_calls = 12, 
    static m_destructor_calls = 12, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}
$24 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029310, 
  m_size = 4
}
$25 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1020, 
    static m_debug = false, 
    static m_constructor_calls = 8, 
    static m_copy_constr_calls = 12, 
    static m_destructor_calls = 12, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029330
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 7
-------------------------
0 (2) : 1000 1010 
1 (5) : 1020 1030 1040 1050 1060 
$26 = void
$27 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 2
}
$28 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 9, 
    static m_copy_constr_calls = 14, 
    static m_destructor_calls = 14, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}
$29 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029310, 
  m_size = 5
}
$30 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1020, 
    static m_debug = false, 
    static m_constructor_calls = 9, 
    static m_copy_constr_calls = 14, 
    static m_destructor_calls = 14, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029330
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 8
-------------------------
0 (3) : 1000 1010 1020 
1 (2) : 1030 1040 
2 (3) : 1050 1060 1070 
$31 = void
$32 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$33 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 10, 
    static m_copy_constr_calls = 16, 
    static m_destructor_calls = 16, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$34 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 2
}
$35 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 10, 
    static m_copy_constr_calls = 16, 
    static m_destructor_calls = 16, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}
$36 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029310, 
  m_size = 3
}
$37 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1020, 
    static m_debug = false, 
    static m_constructor_calls = 10, 
    static m_copy_constr_calls = 16, 
    static m_destructor_calls = 16, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029330
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 9
-------------------------
0 (3) : 1000 1010 1020 
1 (2) : 1030 1040 
2 (4) : 1050 1060 1070 1080 
$38 = void
$39 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$40 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 11, 
    static m_copy_constr_calls = 18, 
    static m_destructor_calls = 18, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$41 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 2
}
$42 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 11, 
    static m_copy_constr_calls = 18, 
    static m_destructor_calls = 18, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}
$43 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029310, 
  m_size = 4
}
$44 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1020, 
    static m_debug = false, 
    static m_constructor_calls = 11, 
    static m_copy_constr_calls = 18, 
    static m_destructor_calls = 18, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029330
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 10
-------------------------
0 (3) : 1000 1010 1020 
1 (2) : 1030 1040 
2 (5) : 1050 1060 1070 1080 1090 
$45 = void
$46 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$47 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 12, 
    static m_copy_constr_calls = 20, 
    static m_destructor_calls = 20, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$48 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 2
}
$49 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 12, 
    static m_copy_constr_calls = 20, 
    static m_destructor_calls = 20, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}
$50 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029310, 
  m_size = 5
}
$51 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1020, 
    static m_debug = false, 
    static m_constructor_calls = 12, 
    static m_copy_constr_calls = 20, 
    static m_destructor_calls = 20, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029330
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 11
-------------------------
0 (3) : 1000 1010 1020 
1 (2) : 1030 1040 
2 (6) : 1050 1060 1070 1080 1090 1100 
$52 = void
$53 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$54 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 13, 
    static m_copy_constr_calls = 22, 
    static m_destructor_calls = 22, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$55 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 2
}
$56 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 13, 
    static m_copy_constr_calls = 22, 
    static m_destructor_calls = 22, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}
$57 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029310, 
  m_size = 6
}
$58 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1020, 
    static m_debug = false, 
    static m_constructor_calls = 13, 
    static m_copy_constr_calls = 22, 
    static m_destructor_calls = 22, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029330
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 12
-------------------------
0 (3) : 1000 1010 1020 
1 (3) : 1030 1040 1050 
2 (2) : 1060 1070 
3 (4) : 1080 1090 1100 1110 
$59 = void
$60 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$61 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 14, 
    static m_copy_constr_calls = 24, 
    static m_destructor_calls = 24, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$62 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$63 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 14, 
    static m_copy_constr_calls = 24, 
    static m_destructor_calls = 24, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$64 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 2
}
$65 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 14, 
    static m_copy_constr_calls = 24, 
    static m_destructor_calls = 24, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}
$66 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029310, 
  m_size = 4
}
$67 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1020, 
    static m_debug = false, 
    static m_constructor_calls = 14, 
    static m_copy_constr_calls = 24, 
    static m_destructor_calls = 24, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029330
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 13
-------------------------
0 (3) : 1000 1010 1020 
1 (3) : 1030 1040 1050 
2 (2) : 1060 1070 
3 (5) : 1080 1090 1100 1110 1120 
$68 = void
$69 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$70 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 15, 
    static m_copy_constr_calls = 26, 
    static m_destructor_calls = 26, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$71 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$72 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 15, 
    static m_copy_constr_calls = 26, 
    static m_destructor_calls = 26, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$73 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 2
}
$74 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 15, 
    static m_copy_constr_calls = 26, 
    static m_destructor_calls = 26, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}
$75 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029310, 
  m_size = 5
}
$76 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1020, 
    static m_debug = false, 
    static m_constructor_calls = 15, 
    static m_copy_constr_calls = 26, 
    static m_destructor_calls = 26, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029330
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 14
-------------------------
0 (3) : 1000 1010 1020 
1 (3) : 1030 1040 1050 
2 (2) : 1060 1070 
3 (6) : 1080 1090 1100 1110 1120 1130 
$77 = void
$78 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$79 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 16, 
    static m_copy_constr_calls = 28, 
    static m_destructor_calls = 28, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$80 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$81 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 16, 
    static m_copy_constr_calls = 28, 
    static m_destructor_calls = 28, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$82 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 2
}
$83 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 16, 
    static m_copy_constr_calls = 28, 
    static m_destructor_calls = 28, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}
$84 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029310, 
  m_size = 6
}
$85 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1020, 
    static m_debug = false, 
    static m_constructor_calls = 16, 
    static m_copy_constr_calls = 28, 
    static m_destructor_calls = 28, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029330
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 15
-------------------------
0 (3) : 1000 1010 1020 
1 (3) : 1030 1040 1050 
2 (2) : 1060 1070 
3 (7) : 1080 1090 1100 1110 1120 1130 1140 
$86 = void
$87 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$88 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 17, 
    static m_copy_constr_calls = 30, 
    static m_destructor_calls = 30, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$89 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$90 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 17, 
    static m_copy_constr_calls = 30, 
    static m_destructor_calls = 30, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$91 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 2
}
$92 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 17, 
    static m_copy_constr_calls = 30, 
    static m_destructor_calls = 30, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}
$93 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029310, 
  m_size = 7
}
$94 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1020, 
    static m_debug = false, 
    static m_constructor_calls = 17, 
    static m_copy_constr_calls = 30, 
    static m_destructor_calls = 30, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029330
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 16
-------------------------
0 (3) : 1000 1010 1020 
1 (5) : 1030 1040 1050 1060 1070 
2 (3) : 1080 1090 1100 
3 (5) : 1110 1120 1130 1140 1150 
$95 = void
$96 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$97 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 18, 
    static m_copy_constr_calls = 32, 
    static m_destructor_calls = 32, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$98 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$99 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 18, 
    static m_copy_constr_calls = 32, 
    static m_destructor_calls = 32, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$100 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$101 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 18, 
    static m_copy_constr_calls = 32, 
    static m_destructor_calls = 32, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$102 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 5
}
$103 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 18, 
    static m_copy_constr_calls = 32, 
    static m_destructor_calls = 32, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 17
-------------------------
0 (3) : 1000 1010 1020 
1 (5) : 1030 1040 1050 1060 1070 
2 (3) : 1080 1090 1100 
3 (6) : 1110 1120 1130 1140 1150 1160 
$104 = void
$105 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$106 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 19, 
    static m_copy_constr_calls = 34, 
    static m_destructor_calls = 34, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$107 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$108 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 19, 
    static m_copy_constr_calls = 34, 
    static m_destructor_calls = 34, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$109 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$110 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 19, 
    static m_copy_constr_calls = 34, 
    static m_destructor_calls = 34, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$111 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 6
}
$112 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 19, 
    static m_copy_constr_calls = 34, 
    static m_destructor_calls = 34, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 18
-------------------------
0 (3) : 1000 1010 1020 
1 (5) : 1030 1040 1050 1060 1070 
2 (3) : 1080 1090 1100 
3 (7) : 1110 1120 1130 1140 1150 1160 1170 
$113 = void
$114 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$115 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 20, 
    static m_copy_constr_calls = 36, 
    static m_destructor_calls = 36, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$116 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$117 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 20, 
    static m_copy_constr_calls = 36, 
    static m_destructor_calls = 36, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$118 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$119 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 20, 
    static m_copy_constr_calls = 36, 
    static m_destructor_calls = 36, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$120 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 7
}
$121 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 20, 
    static m_copy_constr_calls = 36, 
    static m_destructor_calls = 36, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 19
-------------------------
0 (3) : 1000 1010 1020 
1 (5) : 1030 1040 1050 1060 1070 
2 (3) : 1080 1090 1100 
3 (8) : 1110 1120 1130 1140 1150 1160 1170 1180 
$122 = void
$123 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$124 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 21, 
    static m_copy_constr_calls = 38, 
    static m_destructor_calls = 38, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$125 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$126 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 21, 
    static m_copy_constr_calls = 38, 
    static m_destructor_calls = 38, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$127 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$128 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 21, 
    static m_copy_constr_calls = 38, 
    static m_destructor_calls = 38, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$129 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 8
}
$130 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 21, 
    static m_copy_constr_calls = 38, 
    static m_destructor_calls = 38, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 20
-------------------------
0 (3) : 1000 1010 1020 
1 (5) : 1030 1040 1050 1060 1070 
2 (4) : 1080 1090 1100 1110 
3 (3) : 1120 1130 1140 
4 (5) : 1150 1160 1170 1180 1190 
$131 = void
$132 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$133 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 22, 
    static m_copy_constr_calls = 40, 
    static m_destructor_calls = 40, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$134 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$135 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 22, 
    static m_copy_constr_calls = 40, 
    static m_destructor_calls = 40, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$136 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$137 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 22, 
    static m_copy_constr_calls = 40, 
    static m_destructor_calls = 40, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$138 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$139 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 22, 
    static m_copy_constr_calls = 40, 
    static m_destructor_calls = 40, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$140 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 5
}
$141 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 22, 
    static m_copy_constr_calls = 40, 
    static m_destructor_calls = 40, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 21
-------------------------
0 (3) : 1000 1010 1020 
1 (5) : 1030 1040 1050 1060 1070 
2 (4) : 1080 1090 1100 1110 
3 (3) : 1120 1130 1140 
4 (6) : 1150 1160 1170 1180 1190 1200 
$142 = void
$143 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$144 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 23, 
    static m_copy_constr_calls = 42, 
    static m_destructor_calls = 42, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$145 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$146 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 23, 
    static m_copy_constr_calls = 42, 
    static m_destructor_calls = 42, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$147 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$148 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 23, 
    static m_copy_constr_calls = 42, 
    static m_destructor_calls = 42, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$149 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$150 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 23, 
    static m_copy_constr_calls = 42, 
    static m_destructor_calls = 42, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$151 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 6
}
$152 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 23, 
    static m_copy_constr_calls = 42, 
    static m_destructor_calls = 42, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 22
-------------------------
0 (3) : 1000 1010 1020 
1 (5) : 1030 1040 1050 1060 1070 
2 (4) : 1080 1090 1100 1110 
3 (3) : 1120 1130 1140 
4 (7) : 1150 1160 1170 1180 1190 1200 1210 
$153 = void
$154 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$155 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 24, 
    static m_copy_constr_calls = 44, 
    static m_destructor_calls = 44, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$156 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$157 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 24, 
    static m_copy_constr_calls = 44, 
    static m_destructor_calls = 44, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$158 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$159 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 24, 
    static m_copy_constr_calls = 44, 
    static m_destructor_calls = 44, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$160 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$161 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 24, 
    static m_copy_constr_calls = 44, 
    static m_destructor_calls = 44, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$162 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 7
}
$163 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 24, 
    static m_copy_constr_calls = 44, 
    static m_destructor_calls = 44, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 23
-------------------------
0 (3) : 1000 1010 1020 
1 (5) : 1030 1040 1050 1060 1070 
2 (4) : 1080 1090 1100 1110 
3 (3) : 1120 1130 1140 
4 (8) : 1150 1160 1170 1180 1190 1200 1210 1220 
$164 = void
$165 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$166 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 25, 
    static m_copy_constr_calls = 46, 
    static m_destructor_calls = 46, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$167 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$168 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 25, 
    static m_copy_constr_calls = 46, 
    static m_destructor_calls = 46, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$169 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$170 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 25, 
    static m_copy_constr_calls = 46, 
    static m_destructor_calls = 46, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$171 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$172 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 25, 
    static m_copy_constr_calls = 46, 
    static m_destructor_calls = 46, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$173 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 8
}
$174 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 25, 
    static m_copy_constr_calls = 46, 
    static m_destructor_calls = 46, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 24
-------------------------
0 (3) : 1000 1010 1020 
1 (5) : 1030 1040 1050 1060 1070 
2 (4) : 1080 1090 1100 1110 
3 (3) : 1120 1130 1140 
4 (9) : 1150 1160 1170 1180 1190 1200 1210 1220 1230 
$175 = void
$176 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$177 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 26, 
    static m_copy_constr_calls = 48, 
    static m_destructor_calls = 48, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$178 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$179 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 26, 
    static m_copy_constr_calls = 48, 
    static m_destructor_calls = 48, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$180 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$181 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 26, 
    static m_copy_constr_calls = 48, 
    static m_destructor_calls = 48, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$182 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$183 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 26, 
    static m_copy_constr_calls = 48, 
    static m_destructor_calls = 48, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$184 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 9
}
$185 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 26, 
    static m_copy_constr_calls = 48, 
    static m_destructor_calls = 48, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 25
-------------------------
0 (3) : 1000 1010 1020 
1 (5) : 1030 1040 1050 1060 1070 
2 (4) : 1080 1090 1100 1110 
3 (5) : 1120 1130 1140 1150 1160 
4 (3) : 1170 1180 1190 
5 (5) : 1200 1210 1220 1230 1240 
$186 = void
$187 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$188 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 27, 
    static m_copy_constr_calls = 50, 
    static m_destructor_calls = 50, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$189 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$190 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 27, 
    static m_copy_constr_calls = 50, 
    static m_destructor_calls = 50, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$191 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$192 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 27, 
    static m_copy_constr_calls = 50, 
    static m_destructor_calls = 50, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$193 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$194 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 27, 
    static m_copy_constr_calls = 50, 
    static m_destructor_calls = 50, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$195 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$196 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 27, 
    static m_copy_constr_calls = 50, 
    static m_destructor_calls = 50, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$197 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 5
}
$198 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 27, 
    static m_copy_constr_calls = 50, 
    static m_destructor_calls = 50, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 26
-------------------------
0 (3) : 1000 1010 1020 
1 (5) : 1030 1040 1050 1060 1070 
2 (4) : 1080 1090 1100 1110 
3 (5) : 1120 1130 1140 1150 1160 
4 (3) : 1170 1180 1190 
5 (6) : 1200 1210 1220 1230 1240 1250 
$199 = void
$200 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$201 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 28, 
    static m_copy_constr_calls = 52, 
    static m_destructor_calls = 52, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$202 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$203 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 28, 
    static m_copy_constr_calls = 52, 
    static m_destructor_calls = 52, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$204 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$205 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 28, 
    static m_copy_constr_calls = 52, 
    static m_destructor_calls = 52, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$206 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$207 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 28, 
    static m_copy_constr_calls = 52, 
    static m_destructor_calls = 52, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$208 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$209 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 28, 
    static m_copy_constr_calls = 52, 
    static m_destructor_calls = 52, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$210 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 6
}
$211 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 28, 
    static m_copy_constr_calls = 52, 
    static m_destructor_calls = 52, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 27
-------------------------
0 (3) : 1000 1010 1020 
1 (5) : 1030 1040 1050 1060 1070 
2 (4) : 1080 1090 1100 1110 
3 (5) : 1120 1130 1140 1150 1160 
4 (3) : 1170 1180 1190 
5 (7) : 1200 1210 1220 1230 1240 1250 1260 
$212 = void
$213 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$214 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 29, 
    static m_copy_constr_calls = 54, 
    static m_destructor_calls = 54, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$215 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$216 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 29, 
    static m_copy_constr_calls = 54, 
    static m_destructor_calls = 54, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$217 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$218 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 29, 
    static m_copy_constr_calls = 54, 
    static m_destructor_calls = 54, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$219 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$220 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 29, 
    static m_copy_constr_calls = 54, 
    static m_destructor_calls = 54, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$221 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$222 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 29, 
    static m_copy_constr_calls = 54, 
    static m_destructor_calls = 54, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$223 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 7
}
$224 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 29, 
    static m_copy_constr_calls = 54, 
    static m_destructor_calls = 54, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 28
-------------------------
0 (3) : 1000 1010 1020 
1 (5) : 1030 1040 1050 1060 1070 
2 (4) : 1080 1090 1100 1110 
3 (5) : 1120 1130 1140 1150 1160 
4 (3) : 1170 1180 1190 
5 (8) : 1200 1210 1220 1230 1240 1250 1260 1270 
$225 = void
$226 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$227 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 30, 
    static m_copy_constr_calls = 56, 
    static m_destructor_calls = 56, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$228 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$229 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 30, 
    static m_copy_constr_calls = 56, 
    static m_destructor_calls = 56, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$230 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$231 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 30, 
    static m_copy_constr_calls = 56, 
    static m_destructor_calls = 56, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$232 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$233 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 30, 
    static m_copy_constr_calls = 56, 
    static m_destructor_calls = 56, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$234 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$235 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 30, 
    static m_copy_constr_calls = 56, 
    static m_destructor_calls = 56, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$236 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 8
}
$237 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 30, 
    static m_copy_constr_calls = 56, 
    static m_destructor_calls = 56, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 29
-------------------------
0 (3) : 1000 1010 1020 
1 (5) : 1030 1040 1050 1060 1070 
2 (4) : 1080 1090 1100 1110 
3 (5) : 1120 1130 1140 1150 1160 
4 (3) : 1170 1180 1190 
5 (9) : 1200 1210 1220 1230 1240 1250 1260 1270 1280 
$238 = void
$239 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$240 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 31, 
    static m_copy_constr_calls = 58, 
    static m_destructor_calls = 58, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$241 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$242 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 31, 
    static m_copy_constr_calls = 58, 
    static m_destructor_calls = 58, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$243 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$244 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 31, 
    static m_copy_constr_calls = 58, 
    static m_destructor_calls = 58, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$245 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$246 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 31, 
    static m_copy_constr_calls = 58, 
    static m_destructor_calls = 58, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$247 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$248 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 31, 
    static m_copy_constr_calls = 58, 
    static m_destructor_calls = 58, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$249 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 9
}
$250 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 31, 
    static m_copy_constr_calls = 58, 
    static m_destructor_calls = 58, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 30
-------------------------
0 (3) : 1000 1010 1020 
1 (5) : 1030 1040 1050 1060 1070 
2 (4) : 1080 1090 1100 1110 
3 (5) : 1120 1130 1140 1150 1160 
4 (3) : 1170 1180 1190 
5 (10) : 1200 1210 1220 1230 1240 1250 1260 1270 1280 1290 
$251 = void
$252 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$253 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 32, 
    static m_copy_constr_calls = 60, 
    static m_destructor_calls = 60, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$254 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$255 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 32, 
    static m_copy_constr_calls = 60, 
    static m_destructor_calls = 60, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$256 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$257 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 32, 
    static m_copy_constr_calls = 60, 
    static m_destructor_calls = 60, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$258 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$259 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 32, 
    static m_copy_constr_calls = 60, 
    static m_destructor_calls = 60, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$260 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$261 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 32, 
    static m_copy_constr_calls = 60, 
    static m_destructor_calls = 60, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$262 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 10
}
$263 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 32, 
    static m_copy_constr_calls = 60, 
    static m_destructor_calls = 60, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 31
-------------------------
0 (3) : 1000 1010 1020 
1 (5) : 1030 1040 1050 1060 1070 
2 (4) : 1080 1090 1100 1110 
3 (5) : 1120 1130 1140 1150 1160 
4 (3) : 1170 1180 1190 
5 (11) : 1200 1210 1220 1230 1240 1250 1260 1270 1280 1290 1300 
$264 = void
$265 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$266 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 33, 
    static m_copy_constr_calls = 62, 
    static m_destructor_calls = 62, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$267 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$268 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 33, 
    static m_copy_constr_calls = 62, 
    static m_destructor_calls = 62, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$269 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$270 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 33, 
    static m_copy_constr_calls = 62, 
    static m_destructor_calls = 62, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$271 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$272 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 33, 
    static m_copy_constr_calls = 62, 
    static m_destructor_calls = 62, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$273 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$274 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 33, 
    static m_copy_constr_calls = 62, 
    static m_destructor_calls = 62, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$275 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 11
}
$276 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 33, 
    static m_copy_constr_calls = 62, 
    static m_destructor_calls = 62, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 32
-------------------------
0 (3) : 1000 1010 1020 
1 (5) : 1030 1040 1050 1060 1070 
2 (4) : 1080 1090 1100 1110 
3 (5) : 1120 1130 1140 1150 1160 
4 (6) : 1170 1180 1190 1200 1210 1220 
5 (3) : 1230 1240 1250 
6 (6) : 1260 1270 1280 1290 1300 1310 
$277 = void
$278 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$279 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 34, 
    static m_copy_constr_calls = 64, 
    static m_destructor_calls = 64, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$280 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$281 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 34, 
    static m_copy_constr_calls = 64, 
    static m_destructor_calls = 64, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$282 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$283 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 34, 
    static m_copy_constr_calls = 64, 
    static m_destructor_calls = 64, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$284 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$285 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 34, 
    static m_copy_constr_calls = 64, 
    static m_destructor_calls = 64, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$286 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$287 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 34, 
    static m_copy_constr_calls = 64, 
    static m_destructor_calls = 64, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$288 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$289 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 34, 
    static m_copy_constr_calls = 64, 
    static m_destructor_calls = 64, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$290 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 6
}
$291 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 34, 
    static m_copy_constr_calls = 64, 
    static m_destructor_calls = 64, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 33
-------------------------
0 (3) : 1000 1010 1020 
1 (5) : 1030 1040 1050 1060 1070 
2 (4) : 1080 1090 1100 1110 
3 (5) : 1120 1130 1140 1150 1160 
4 (6) : 1170 1180 1190 1200 1210 1220 
5 (3) : 1230 1240 1250 
6 (7) : 1260 1270 1280 1290 1300 1310 1320 
$292 = void
$293 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$294 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 35, 
    static m_copy_constr_calls = 66, 
    static m_destructor_calls = 66, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$295 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$296 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 35, 
    static m_copy_constr_calls = 66, 
    static m_destructor_calls = 66, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$297 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$298 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 35, 
    static m_copy_constr_calls = 66, 
    static m_destructor_calls = 66, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$299 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$300 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 35, 
    static m_copy_constr_calls = 66, 
    static m_destructor_calls = 66, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$301 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$302 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 35, 
    static m_copy_constr_calls = 66, 
    static m_destructor_calls = 66, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$303 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$304 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 35, 
    static m_copy_constr_calls = 66, 
    static m_destructor_calls = 66, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$305 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 7
}
$306 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 35, 
    static m_copy_constr_calls = 66, 
    static m_destructor_calls = 66, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 34
-------------------------
0 (3) : 1000 1010 1020 
1 (5) : 1030 1040 1050 1060 1070 
2 (4) : 1080 1090 1100 1110 
3 (5) : 1120 1130 1140 1150 1160 
4 (6) : 1170 1180 1190 1200 1210 1220 
5 (3) : 1230 1240 1250 
6 (8) : 1260 1270 1280 1290 1300 1310 1320 1330 
$307 = void
$308 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$309 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 36, 
    static m_copy_constr_calls = 68, 
    static m_destructor_calls = 68, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$310 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$311 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 36, 
    static m_copy_constr_calls = 68, 
    static m_destructor_calls = 68, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$312 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$313 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 36, 
    static m_copy_constr_calls = 68, 
    static m_destructor_calls = 68, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$314 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$315 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 36, 
    static m_copy_constr_calls = 68, 
    static m_destructor_calls = 68, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$316 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$317 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 36, 
    static m_copy_constr_calls = 68, 
    static m_destructor_calls = 68, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$318 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$319 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 36, 
    static m_copy_constr_calls = 68, 
    static m_destructor_calls = 68, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$320 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 8
}
$321 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 36, 
    static m_copy_constr_calls = 68, 
    static m_destructor_calls = 68, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 35
-------------------------
0 (3) : 1000 1010 1020 
1 (5) : 1030 1040 1050 1060 1070 
2 (4) : 1080 1090 1100 1110 
3 (5) : 1120 1130 1140 1150 1160 
4 (6) : 1170 1180 1190 1200 1210 1220 
5 (3) : 1230 1240 1250 
6 (9) : 1260 1270 1280 1290 1300 1310 1320 1330 1340 
$322 = void
$323 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$324 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 37, 
    static m_copy_constr_calls = 70, 
    static m_destructor_calls = 70, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$325 = (INode &) @0x600029360: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$326 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 37, 
    static m_copy_constr_calls = 70, 
    static m_destructor_calls = 70, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$327 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$328 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 37, 
    static m_copy_constr_calls = 70, 
    static m_destructor_calls = 70, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$329 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$330 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 37, 
    static m_copy_constr_calls = 70, 
    static m_destructor_calls = 70, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$331 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$332 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 37, 
    static m_copy_constr_calls = 70, 
    static m_destructor_calls = 70, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$333 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 3
}
$334 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 37, 
    static m_copy_constr_calls = 70, 
    static m_destructor_calls = 70, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$335 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029250, 
  m_size = 9
}
$336 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1000, 
    static m_debug = false, 
    static m_constructor_calls = 37, 
    static m_copy_constr_calls = 70, 
    static m_destructor_calls = 70, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000292f0
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 36
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (7) : 1290 1300 1310 1320 1330 1340 1350 
$337 = void
$338 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$339 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 38, 
    static m_copy_constr_calls = 72, 
    static m_destructor_calls = 72, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$340 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$341 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 38, 
    static m_copy_constr_calls = 72, 
    static m_destructor_calls = 72, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$342 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$343 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 38, 
    static m_copy_constr_calls = 72, 
    static m_destructor_calls = 72, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$344 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$345 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 38, 
    static m_copy_constr_calls = 72, 
    static m_destructor_calls = 72, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$346 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$347 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 38, 
    static m_copy_constr_calls = 72, 
    static m_destructor_calls = 72, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$348 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 7
}
$349 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 38, 
    static m_copy_constr_calls = 72, 
    static m_destructor_calls = 72, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 37
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (8) : 1290 1300 1310 1320 1330 1340 1350 1360 
$350 = void
$351 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$352 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 39, 
    static m_copy_constr_calls = 74, 
    static m_destructor_calls = 74, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$353 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$354 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 39, 
    static m_copy_constr_calls = 74, 
    static m_destructor_calls = 74, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$355 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$356 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 39, 
    static m_copy_constr_calls = 74, 
    static m_destructor_calls = 74, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$357 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$358 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 39, 
    static m_copy_constr_calls = 74, 
    static m_destructor_calls = 74, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$359 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$360 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 39, 
    static m_copy_constr_calls = 74, 
    static m_destructor_calls = 74, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$361 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$362 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 39, 
    static m_copy_constr_calls = 74, 
    static m_destructor_calls = 74, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 38
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (9) : 1290 1300 1310 1320 1330 1340 1350 1360 1370 
$363 = void
$364 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$365 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 40, 
    static m_copy_constr_calls = 76, 
    static m_destructor_calls = 76, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$366 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$367 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 40, 
    static m_copy_constr_calls = 76, 
    static m_destructor_calls = 76, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$368 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$369 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 40, 
    static m_copy_constr_calls = 76, 
    static m_destructor_calls = 76, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$370 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$371 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 40, 
    static m_copy_constr_calls = 76, 
    static m_destructor_calls = 76, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$372 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$373 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 40, 
    static m_copy_constr_calls = 76, 
    static m_destructor_calls = 76, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$374 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 9
}
$375 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 40, 
    static m_copy_constr_calls = 76, 
    static m_destructor_calls = 76, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 39
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (10) : 1290 1300 1310 1320 1330 1340 1350 1360 1370 1380 
$376 = void
$377 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$378 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 41, 
    static m_copy_constr_calls = 78, 
    static m_destructor_calls = 78, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$379 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$380 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 41, 
    static m_copy_constr_calls = 78, 
    static m_destructor_calls = 78, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$381 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$382 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 41, 
    static m_copy_constr_calls = 78, 
    static m_destructor_calls = 78, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$383 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$384 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 41, 
    static m_copy_constr_calls = 78, 
    static m_destructor_calls = 78, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$385 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$386 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 41, 
    static m_copy_constr_calls = 78, 
    static m_destructor_calls = 78, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$387 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 10
}
$388 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 41, 
    static m_copy_constr_calls = 78, 
    static m_destructor_calls = 78, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 40
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (11) : 1290 1300 1310 1320 1330 1340 1350 1360 1370 1380 1390 
$389 = void
$390 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$391 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 42, 
    static m_copy_constr_calls = 80, 
    static m_destructor_calls = 80, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$392 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$393 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 42, 
    static m_copy_constr_calls = 80, 
    static m_destructor_calls = 80, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$394 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$395 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 42, 
    static m_copy_constr_calls = 80, 
    static m_destructor_calls = 80, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$396 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$397 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 42, 
    static m_copy_constr_calls = 80, 
    static m_destructor_calls = 80, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$398 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$399 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 42, 
    static m_copy_constr_calls = 80, 
    static m_destructor_calls = 80, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$400 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 11
}
$401 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 42, 
    static m_copy_constr_calls = 80, 
    static m_destructor_calls = 80, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 41
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (12) : 1290 1300 1310 1320 1330 1340 1350 1360 1370 1380 1390 1400 
$402 = void
$403 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$404 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 43, 
    static m_copy_constr_calls = 82, 
    static m_destructor_calls = 82, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$405 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$406 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 43, 
    static m_copy_constr_calls = 82, 
    static m_destructor_calls = 82, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$407 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$408 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 43, 
    static m_copy_constr_calls = 82, 
    static m_destructor_calls = 82, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$409 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$410 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 43, 
    static m_copy_constr_calls = 82, 
    static m_destructor_calls = 82, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$411 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$412 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 43, 
    static m_copy_constr_calls = 82, 
    static m_destructor_calls = 82, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$413 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 12
}
$414 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 43, 
    static m_copy_constr_calls = 82, 
    static m_destructor_calls = 82, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 42
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (6) : 1290 1300 1310 1320 1330 1340 
6 (7) : 1350 1360 1370 1380 1390 1400 1410 
$415 = void
$416 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$417 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 44, 
    static m_copy_constr_calls = 84, 
    static m_destructor_calls = 84, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$418 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$419 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 44, 
    static m_copy_constr_calls = 84, 
    static m_destructor_calls = 84, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$420 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$421 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 44, 
    static m_copy_constr_calls = 84, 
    static m_destructor_calls = 84, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$422 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$423 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 44, 
    static m_copy_constr_calls = 84, 
    static m_destructor_calls = 84, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$424 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$425 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 44, 
    static m_copy_constr_calls = 84, 
    static m_destructor_calls = 84, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$426 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$427 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 44, 
    static m_copy_constr_calls = 84, 
    static m_destructor_calls = 84, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$428 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 7
}
$429 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 44, 
    static m_copy_constr_calls = 84, 
    static m_destructor_calls = 84, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 43
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (6) : 1290 1300 1310 1320 1330 1340 
6 (8) : 1350 1360 1370 1380 1390 1400 1410 1420 
$430 = void
$431 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$432 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 45, 
    static m_copy_constr_calls = 86, 
    static m_destructor_calls = 86, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$433 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$434 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 45, 
    static m_copy_constr_calls = 86, 
    static m_destructor_calls = 86, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$435 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$436 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 45, 
    static m_copy_constr_calls = 86, 
    static m_destructor_calls = 86, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$437 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$438 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 45, 
    static m_copy_constr_calls = 86, 
    static m_destructor_calls = 86, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$439 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$440 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 45, 
    static m_copy_constr_calls = 86, 
    static m_destructor_calls = 86, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$441 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$442 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 45, 
    static m_copy_constr_calls = 86, 
    static m_destructor_calls = 86, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$443 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$444 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 45, 
    static m_copy_constr_calls = 86, 
    static m_destructor_calls = 86, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 44
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (6) : 1290 1300 1310 1320 1330 1340 
6 (9) : 1350 1360 1370 1380 1390 1400 1410 1420 1430 
$445 = void
$446 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$447 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 46, 
    static m_copy_constr_calls = 88, 
    static m_destructor_calls = 88, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$448 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$449 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 46, 
    static m_copy_constr_calls = 88, 
    static m_destructor_calls = 88, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$450 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$451 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 46, 
    static m_copy_constr_calls = 88, 
    static m_destructor_calls = 88, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$452 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$453 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 46, 
    static m_copy_constr_calls = 88, 
    static m_destructor_calls = 88, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$454 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$455 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 46, 
    static m_copy_constr_calls = 88, 
    static m_destructor_calls = 88, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$456 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$457 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 46, 
    static m_copy_constr_calls = 88, 
    static m_destructor_calls = 88, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$458 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 9
}
$459 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 46, 
    static m_copy_constr_calls = 88, 
    static m_destructor_calls = 88, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 45
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (6) : 1290 1300 1310 1320 1330 1340 
6 (10) : 1350 1360 1370 1380 1390 1400 1410 1420 1430 1440 
$460 = void
$461 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$462 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 47, 
    static m_copy_constr_calls = 90, 
    static m_destructor_calls = 90, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$463 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$464 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 47, 
    static m_copy_constr_calls = 90, 
    static m_destructor_calls = 90, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$465 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$466 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 47, 
    static m_copy_constr_calls = 90, 
    static m_destructor_calls = 90, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$467 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$468 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 47, 
    static m_copy_constr_calls = 90, 
    static m_destructor_calls = 90, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$469 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$470 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 47, 
    static m_copy_constr_calls = 90, 
    static m_destructor_calls = 90, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$471 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$472 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 47, 
    static m_copy_constr_calls = 90, 
    static m_destructor_calls = 90, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$473 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 10
}
$474 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 47, 
    static m_copy_constr_calls = 90, 
    static m_destructor_calls = 90, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 46
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (6) : 1290 1300 1310 1320 1330 1340 
6 (11) : 1350 1360 1370 1380 1390 1400 1410 1420 1430 1440 1450 
$475 = void
$476 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$477 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 48, 
    static m_copy_constr_calls = 92, 
    static m_destructor_calls = 92, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$478 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$479 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 48, 
    static m_copy_constr_calls = 92, 
    static m_destructor_calls = 92, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$480 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$481 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 48, 
    static m_copy_constr_calls = 92, 
    static m_destructor_calls = 92, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$482 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$483 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 48, 
    static m_copy_constr_calls = 92, 
    static m_destructor_calls = 92, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$484 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$485 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 48, 
    static m_copy_constr_calls = 92, 
    static m_destructor_calls = 92, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$486 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$487 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 48, 
    static m_copy_constr_calls = 92, 
    static m_destructor_calls = 92, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$488 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 11
}
$489 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 48, 
    static m_copy_constr_calls = 92, 
    static m_destructor_calls = 92, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 47
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (6) : 1290 1300 1310 1320 1330 1340 
6 (12) : 1350 1360 1370 1380 1390 1400 1410 1420 1430 1440 1450 1460 
$490 = void
$491 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$492 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 49, 
    static m_copy_constr_calls = 94, 
    static m_destructor_calls = 94, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$493 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$494 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 49, 
    static m_copy_constr_calls = 94, 
    static m_destructor_calls = 94, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$495 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$496 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 49, 
    static m_copy_constr_calls = 94, 
    static m_destructor_calls = 94, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$497 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$498 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 49, 
    static m_copy_constr_calls = 94, 
    static m_destructor_calls = 94, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$499 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$500 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 49, 
    static m_copy_constr_calls = 94, 
    static m_destructor_calls = 94, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$501 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$502 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 49, 
    static m_copy_constr_calls = 94, 
    static m_destructor_calls = 94, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$503 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 12
}
$504 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 49, 
    static m_copy_constr_calls = 94, 
    static m_destructor_calls = 94, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 48
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (6) : 1290 1300 1310 1320 1330 1340 
6 (13) : 1350 1360 1370 1380 1390 1400 1410 1420 1430 1440 1450 1460 1470 
$505 = void
$506 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$507 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 50, 
    static m_copy_constr_calls = 96, 
    static m_destructor_calls = 96, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$508 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$509 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 50, 
    static m_copy_constr_calls = 96, 
    static m_destructor_calls = 96, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$510 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$511 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 50, 
    static m_copy_constr_calls = 96, 
    static m_destructor_calls = 96, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$512 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$513 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 50, 
    static m_copy_constr_calls = 96, 
    static m_destructor_calls = 96, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$514 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$515 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 50, 
    static m_copy_constr_calls = 96, 
    static m_destructor_calls = 96, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$516 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$517 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 50, 
    static m_copy_constr_calls = 96, 
    static m_destructor_calls = 96, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$518 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 13
}
$519 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 50, 
    static m_copy_constr_calls = 96, 
    static m_destructor_calls = 96, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 49
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (7) : 1290 1300 1310 1320 1330 1340 1350 
6 (6) : 1360 1370 1380 1390 1400 1410 
7 (7) : 1420 1430 1440 1450 1460 1470 1480 
$520 = void
$521 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$522 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 51, 
    static m_copy_constr_calls = 98, 
    static m_destructor_calls = 98, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$523 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$524 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 51, 
    static m_copy_constr_calls = 98, 
    static m_destructor_calls = 98, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$525 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$526 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 51, 
    static m_copy_constr_calls = 98, 
    static m_destructor_calls = 98, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$527 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$528 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 51, 
    static m_copy_constr_calls = 98, 
    static m_destructor_calls = 98, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$529 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$530 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 51, 
    static m_copy_constr_calls = 98, 
    static m_destructor_calls = 98, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$531 = (INode &) @0x600066920: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029560, 
  m_size = 7
}
$532 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1160, 
    static m_debug = false, 
    static m_constructor_calls = 51, 
    static m_copy_constr_calls = 98, 
    static m_destructor_calls = 98, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029580
}
$533 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$534 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 51, 
    static m_copy_constr_calls = 98, 
    static m_destructor_calls = 98, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$535 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 7
}
$536 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 51, 
    static m_copy_constr_calls = 98, 
    static m_destructor_calls = 98, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 50
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (7) : 1290 1300 1310 1320 1330 1340 1350 
6 (6) : 1360 1370 1380 1390 1400 1410 
7 (8) : 1420 1430 1440 1450 1460 1470 1480 1490 
$537 = void
$538 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$539 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 52, 
    static m_copy_constr_calls = 100, 
    static m_destructor_calls = 100, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$540 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$541 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 52, 
    static m_copy_constr_calls = 100, 
    static m_destructor_calls = 100, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$542 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$543 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 52, 
    static m_copy_constr_calls = 100, 
    static m_destructor_calls = 100, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$544 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$545 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 52, 
    static m_copy_constr_calls = 100, 
    static m_destructor_calls = 100, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$546 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$547 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 52, 
    static m_copy_constr_calls = 100, 
    static m_destructor_calls = 100, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$548 = (INode &) @0x600066920: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029560, 
  m_size = 7
}
$549 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1160, 
    static m_debug = false, 
    static m_constructor_calls = 52, 
    static m_copy_constr_calls = 100, 
    static m_destructor_calls = 100, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029580
}
$550 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$551 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 52, 
    static m_copy_constr_calls = 100, 
    static m_destructor_calls = 100, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$552 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$553 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 52, 
    static m_copy_constr_calls = 100, 
    static m_destructor_calls = 100, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 51
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (7) : 1290 1300 1310 1320 1330 1340 1350 
6 (6) : 1360 1370 1380 1390 1400 1410 
7 (9) : 1420 1430 1440 1450 1460 1470 1480 1490 1500 
$554 = void
$555 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$556 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 53, 
    static m_copy_constr_calls = 102, 
    static m_destructor_calls = 102, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$557 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$558 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 53, 
    static m_copy_constr_calls = 102, 
    static m_destructor_calls = 102, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$559 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$560 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 53, 
    static m_copy_constr_calls = 102, 
    static m_destructor_calls = 102, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$561 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$562 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 53, 
    static m_copy_constr_calls = 102, 
    static m_destructor_calls = 102, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$563 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$564 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 53, 
    static m_copy_constr_calls = 102, 
    static m_destructor_calls = 102, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$565 = (INode &) @0x600066920: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029560, 
  m_size = 7
}
$566 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1160, 
    static m_debug = false, 
    static m_constructor_calls = 53, 
    static m_copy_constr_calls = 102, 
    static m_destructor_calls = 102, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029580
}
$567 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$568 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 53, 
    static m_copy_constr_calls = 102, 
    static m_destructor_calls = 102, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$569 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 9
}
$570 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 53, 
    static m_copy_constr_calls = 102, 
    static m_destructor_calls = 102, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 52
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (7) : 1290 1300 1310 1320 1330 1340 1350 
6 (6) : 1360 1370 1380 1390 1400 1410 
7 (10) : 1420 1430 1440 1450 1460 1470 1480 1490 1500 1510 
$571 = void
$572 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$573 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 54, 
    static m_copy_constr_calls = 104, 
    static m_destructor_calls = 104, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$574 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$575 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 54, 
    static m_copy_constr_calls = 104, 
    static m_destructor_calls = 104, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$576 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$577 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 54, 
    static m_copy_constr_calls = 104, 
    static m_destructor_calls = 104, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$578 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$579 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 54, 
    static m_copy_constr_calls = 104, 
    static m_destructor_calls = 104, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$580 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$581 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 54, 
    static m_copy_constr_calls = 104, 
    static m_destructor_calls = 104, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$582 = (INode &) @0x600066920: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029560, 
  m_size = 7
}
$583 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1160, 
    static m_debug = false, 
    static m_constructor_calls = 54, 
    static m_copy_constr_calls = 104, 
    static m_destructor_calls = 104, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029580
}
$584 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$585 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 54, 
    static m_copy_constr_calls = 104, 
    static m_destructor_calls = 104, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$586 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 10
}
$587 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 54, 
    static m_copy_constr_calls = 104, 
    static m_destructor_calls = 104, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 53
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (7) : 1290 1300 1310 1320 1330 1340 1350 
6 (6) : 1360 1370 1380 1390 1400 1410 
7 (11) : 1420 1430 1440 1450 1460 1470 1480 1490 1500 1510 1520 
$588 = void
$589 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$590 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 55, 
    static m_copy_constr_calls = 106, 
    static m_destructor_calls = 106, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$591 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$592 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 55, 
    static m_copy_constr_calls = 106, 
    static m_destructor_calls = 106, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$593 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$594 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 55, 
    static m_copy_constr_calls = 106, 
    static m_destructor_calls = 106, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$595 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$596 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 55, 
    static m_copy_constr_calls = 106, 
    static m_destructor_calls = 106, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$597 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$598 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 55, 
    static m_copy_constr_calls = 106, 
    static m_destructor_calls = 106, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$599 = (INode &) @0x600066920: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029560, 
  m_size = 7
}
$600 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1160, 
    static m_debug = false, 
    static m_constructor_calls = 55, 
    static m_copy_constr_calls = 106, 
    static m_destructor_calls = 106, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029580
}
$601 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$602 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 55, 
    static m_copy_constr_calls = 106, 
    static m_destructor_calls = 106, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$603 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 11
}
$604 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 55, 
    static m_copy_constr_calls = 106, 
    static m_destructor_calls = 106, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 54
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (7) : 1290 1300 1310 1320 1330 1340 1350 
6 (6) : 1360 1370 1380 1390 1400 1410 
7 (12) : 1420 1430 1440 1450 1460 1470 1480 1490 1500 1510 1520 1530 
$605 = void
$606 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$607 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 56, 
    static m_copy_constr_calls = 108, 
    static m_destructor_calls = 108, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$608 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$609 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 56, 
    static m_copy_constr_calls = 108, 
    static m_destructor_calls = 108, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$610 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$611 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 56, 
    static m_copy_constr_calls = 108, 
    static m_destructor_calls = 108, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$612 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$613 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 56, 
    static m_copy_constr_calls = 108, 
    static m_destructor_calls = 108, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$614 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$615 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 56, 
    static m_copy_constr_calls = 108, 
    static m_destructor_calls = 108, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$616 = (INode &) @0x600066920: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029560, 
  m_size = 7
}
$617 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1160, 
    static m_debug = false, 
    static m_constructor_calls = 56, 
    static m_copy_constr_calls = 108, 
    static m_destructor_calls = 108, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029580
}
$618 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$619 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 56, 
    static m_copy_constr_calls = 108, 
    static m_destructor_calls = 108, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$620 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 12
}
$621 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 56, 
    static m_copy_constr_calls = 108, 
    static m_destructor_calls = 108, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 55
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (7) : 1290 1300 1310 1320 1330 1340 1350 
6 (6) : 1360 1370 1380 1390 1400 1410 
7 (13) : 1420 1430 1440 1450 1460 1470 1480 1490 1500 1510 1520 1530 1540 
$622 = void
$623 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$624 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 57, 
    static m_copy_constr_calls = 110, 
    static m_destructor_calls = 110, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$625 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$626 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 57, 
    static m_copy_constr_calls = 110, 
    static m_destructor_calls = 110, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$627 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$628 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 57, 
    static m_copy_constr_calls = 110, 
    static m_destructor_calls = 110, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$629 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$630 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 57, 
    static m_copy_constr_calls = 110, 
    static m_destructor_calls = 110, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$631 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$632 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 57, 
    static m_copy_constr_calls = 110, 
    static m_destructor_calls = 110, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$633 = (INode &) @0x600066920: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029560, 
  m_size = 7
}
$634 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1160, 
    static m_debug = false, 
    static m_constructor_calls = 57, 
    static m_copy_constr_calls = 110, 
    static m_destructor_calls = 110, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029580
}
$635 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$636 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 57, 
    static m_copy_constr_calls = 110, 
    static m_destructor_calls = 110, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$637 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 13
}
$638 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 57, 
    static m_copy_constr_calls = 110, 
    static m_destructor_calls = 110, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 56
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (7) : 1290 1300 1310 1320 1330 1340 1350 
6 (6) : 1360 1370 1380 1390 1400 1410 
7 (14) : 1420 1430 1440 1450 1460 1470 1480 1490 1500 1510 1520 1530 1540 1550 
$639 = void
$640 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$641 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 58, 
    static m_copy_constr_calls = 112, 
    static m_destructor_calls = 112, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$642 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$643 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 58, 
    static m_copy_constr_calls = 112, 
    static m_destructor_calls = 112, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$644 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$645 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 58, 
    static m_copy_constr_calls = 112, 
    static m_destructor_calls = 112, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$646 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$647 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 58, 
    static m_copy_constr_calls = 112, 
    static m_destructor_calls = 112, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$648 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$649 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 58, 
    static m_copy_constr_calls = 112, 
    static m_destructor_calls = 112, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$650 = (INode &) @0x600066920: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029560, 
  m_size = 7
}
$651 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1160, 
    static m_debug = false, 
    static m_constructor_calls = 58, 
    static m_copy_constr_calls = 112, 
    static m_destructor_calls = 112, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029580
}
$652 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$653 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 58, 
    static m_copy_constr_calls = 112, 
    static m_destructor_calls = 112, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$654 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 14
}
$655 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 58, 
    static m_copy_constr_calls = 112, 
    static m_destructor_calls = 112, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 57
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (7) : 1290 1300 1310 1320 1330 1340 1350 
6 (6) : 1360 1370 1380 1390 1400 1410 
7 (15) : 1420 1430 1440 1450 1460 1470 1480 1490 1500 1510 1520 1530 1540 1550 1560 
$656 = void
$657 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$658 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 59, 
    static m_copy_constr_calls = 114, 
    static m_destructor_calls = 114, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$659 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$660 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 59, 
    static m_copy_constr_calls = 114, 
    static m_destructor_calls = 114, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$661 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$662 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 59, 
    static m_copy_constr_calls = 114, 
    static m_destructor_calls = 114, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$663 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$664 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 59, 
    static m_copy_constr_calls = 114, 
    static m_destructor_calls = 114, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$665 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$666 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 59, 
    static m_copy_constr_calls = 114, 
    static m_destructor_calls = 114, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$667 = (INode &) @0x600066920: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029560, 
  m_size = 7
}
$668 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1160, 
    static m_debug = false, 
    static m_constructor_calls = 59, 
    static m_copy_constr_calls = 114, 
    static m_destructor_calls = 114, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029580
}
$669 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$670 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 59, 
    static m_copy_constr_calls = 114, 
    static m_destructor_calls = 114, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$671 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 15
}
$672 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 59, 
    static m_copy_constr_calls = 114, 
    static m_destructor_calls = 114, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 58
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (7) : 1290 1300 1310 1320 1330 1340 1350 
6 (8) : 1360 1370 1380 1390 1400 1410 1420 1430 
7 (6) : 1440 1450 1460 1470 1480 1490 
8 (8) : 1500 1510 1520 1530 1540 1550 1560 1570 
$673 = void
$674 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$675 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 60, 
    static m_copy_constr_calls = 116, 
    static m_destructor_calls = 116, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$676 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$677 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 60, 
    static m_copy_constr_calls = 116, 
    static m_destructor_calls = 116, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$678 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$679 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 60, 
    static m_copy_constr_calls = 116, 
    static m_destructor_calls = 116, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$680 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$681 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 60, 
    static m_copy_constr_calls = 116, 
    static m_destructor_calls = 116, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$682 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$683 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 60, 
    static m_copy_constr_calls = 116, 
    static m_destructor_calls = 116, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$684 = (INode &) @0x600066920: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029560, 
  m_size = 7
}
$685 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1160, 
    static m_debug = false, 
    static m_constructor_calls = 60, 
    static m_copy_constr_calls = 116, 
    static m_destructor_calls = 116, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029580
}
$686 = (INode &) @0x600066a70: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029580, 
  m_size = 8
}
$687 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1170, 
    static m_debug = false, 
    static m_constructor_calls = 60, 
    static m_copy_constr_calls = 116, 
    static m_destructor_calls = 116, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000295a0
}
$688 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$689 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 60, 
    static m_copy_constr_calls = 116, 
    static m_destructor_calls = 116, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$690 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$691 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 60, 
    static m_copy_constr_calls = 116, 
    static m_destructor_calls = 116, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 59
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (7) : 1290 1300 1310 1320 1330 1340 1350 
6 (8) : 1360 1370 1380 1390 1400 1410 1420 1430 
7 (6) : 1440 1450 1460 1470 1480 1490 
8 (9) : 1500 1510 1520 1530 1540 1550 1560 1570 1580 
$692 = void
$693 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$694 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 61, 
    static m_copy_constr_calls = 118, 
    static m_destructor_calls = 118, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$695 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$696 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 61, 
    static m_copy_constr_calls = 118, 
    static m_destructor_calls = 118, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$697 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$698 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 61, 
    static m_copy_constr_calls = 118, 
    static m_destructor_calls = 118, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$699 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$700 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 61, 
    static m_copy_constr_calls = 118, 
    static m_destructor_calls = 118, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$701 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$702 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 61, 
    static m_copy_constr_calls = 118, 
    static m_destructor_calls = 118, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$703 = (INode &) @0x600066920: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029560, 
  m_size = 7
}
$704 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1160, 
    static m_debug = false, 
    static m_constructor_calls = 61, 
    static m_copy_constr_calls = 118, 
    static m_destructor_calls = 118, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029580
}
$705 = (INode &) @0x600066a70: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029580, 
  m_size = 8
}
$706 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1170, 
    static m_debug = false, 
    static m_constructor_calls = 61, 
    static m_copy_constr_calls = 118, 
    static m_destructor_calls = 118, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000295a0
}
$707 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$708 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 61, 
    static m_copy_constr_calls = 118, 
    static m_destructor_calls = 118, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$709 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 9
}
$710 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 61, 
    static m_copy_constr_calls = 118, 
    static m_destructor_calls = 118, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 60
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (7) : 1290 1300 1310 1320 1330 1340 1350 
6 (8) : 1360 1370 1380 1390 1400 1410 1420 1430 
7 (6) : 1440 1450 1460 1470 1480 1490 
8 (10) : 1500 1510 1520 1530 1540 1550 1560 1570 1580 1590 
$711 = void
$712 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$713 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 62, 
    static m_copy_constr_calls = 120, 
    static m_destructor_calls = 120, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$714 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$715 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 62, 
    static m_copy_constr_calls = 120, 
    static m_destructor_calls = 120, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$716 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$717 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 62, 
    static m_copy_constr_calls = 120, 
    static m_destructor_calls = 120, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$718 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$719 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 62, 
    static m_copy_constr_calls = 120, 
    static m_destructor_calls = 120, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$720 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$721 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 62, 
    static m_copy_constr_calls = 120, 
    static m_destructor_calls = 120, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$722 = (INode &) @0x600066920: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029560, 
  m_size = 7
}
$723 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1160, 
    static m_debug = false, 
    static m_constructor_calls = 62, 
    static m_copy_constr_calls = 120, 
    static m_destructor_calls = 120, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029580
}
$724 = (INode &) @0x600066a70: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029580, 
  m_size = 8
}
$725 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1170, 
    static m_debug = false, 
    static m_constructor_calls = 62, 
    static m_copy_constr_calls = 120, 
    static m_destructor_calls = 120, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000295a0
}
$726 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$727 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 62, 
    static m_copy_constr_calls = 120, 
    static m_destructor_calls = 120, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$728 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 10
}
$729 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 62, 
    static m_copy_constr_calls = 120, 
    static m_destructor_calls = 120, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 61
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (7) : 1290 1300 1310 1320 1330 1340 1350 
6 (8) : 1360 1370 1380 1390 1400 1410 1420 1430 
7 (6) : 1440 1450 1460 1470 1480 1490 
8 (11) : 1500 1510 1520 1530 1540 1550 1560 1570 1580 1590 1600 
$730 = void
$731 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$732 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 63, 
    static m_copy_constr_calls = 122, 
    static m_destructor_calls = 122, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$733 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$734 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 63, 
    static m_copy_constr_calls = 122, 
    static m_destructor_calls = 122, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$735 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$736 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 63, 
    static m_copy_constr_calls = 122, 
    static m_destructor_calls = 122, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$737 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$738 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 63, 
    static m_copy_constr_calls = 122, 
    static m_destructor_calls = 122, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$739 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$740 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 63, 
    static m_copy_constr_calls = 122, 
    static m_destructor_calls = 122, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$741 = (INode &) @0x600066920: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029560, 
  m_size = 7
}
$742 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1160, 
    static m_debug = false, 
    static m_constructor_calls = 63, 
    static m_copy_constr_calls = 122, 
    static m_destructor_calls = 122, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029580
}
$743 = (INode &) @0x600066a70: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029580, 
  m_size = 8
}
$744 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1170, 
    static m_debug = false, 
    static m_constructor_calls = 63, 
    static m_copy_constr_calls = 122, 
    static m_destructor_calls = 122, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000295a0
}
$745 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$746 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 63, 
    static m_copy_constr_calls = 122, 
    static m_destructor_calls = 122, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$747 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 11
}
$748 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 63, 
    static m_copy_constr_calls = 122, 
    static m_destructor_calls = 122, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 62
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (7) : 1290 1300 1310 1320 1330 1340 1350 
6 (8) : 1360 1370 1380 1390 1400 1410 1420 1430 
7 (6) : 1440 1450 1460 1470 1480 1490 
8 (12) : 1500 1510 1520 1530 1540 1550 1560 1570 1580 1590 1600 1610 
$749 = void
$750 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$751 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 64, 
    static m_copy_constr_calls = 124, 
    static m_destructor_calls = 124, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$752 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$753 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 64, 
    static m_copy_constr_calls = 124, 
    static m_destructor_calls = 124, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$754 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$755 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 64, 
    static m_copy_constr_calls = 124, 
    static m_destructor_calls = 124, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$756 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$757 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 64, 
    static m_copy_constr_calls = 124, 
    static m_destructor_calls = 124, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$758 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$759 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 64, 
    static m_copy_constr_calls = 124, 
    static m_destructor_calls = 124, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$760 = (INode &) @0x600066920: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029560, 
  m_size = 7
}
$761 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1160, 
    static m_debug = false, 
    static m_constructor_calls = 64, 
    static m_copy_constr_calls = 124, 
    static m_destructor_calls = 124, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029580
}
$762 = (INode &) @0x600066a70: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029580, 
  m_size = 8
}
$763 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1170, 
    static m_debug = false, 
    static m_constructor_calls = 64, 
    static m_copy_constr_calls = 124, 
    static m_destructor_calls = 124, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000295a0
}
$764 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$765 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 64, 
    static m_copy_constr_calls = 124, 
    static m_destructor_calls = 124, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$766 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 12
}
$767 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 64, 
    static m_copy_constr_calls = 124, 
    static m_destructor_calls = 124, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 63
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (4) : 1080 1090 1100 1110 
2 (5) : 1120 1130 1140 1150 1160 
3 (6) : 1170 1180 1190 1200 1210 1220 
4 (6) : 1230 1240 1250 1260 1270 1280 
5 (7) : 1290 1300 1310 1320 1330 1340 1350 
6 (8) : 1360 1370 1380 1390 1400 1410 1420 1430 
7 (6) : 1440 1450 1460 1470 1480 1490 
8 (13) : 1500 1510 1520 1530 1540 1550 1560 1570 1580 1590 1600 1610 1620 
$768 = void
$769 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$770 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 65, 
    static m_copy_constr_calls = 126, 
    static m_destructor_calls = 126, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$771 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 4
}
$772 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 65, 
    static m_copy_constr_calls = 126, 
    static m_destructor_calls = 126, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$773 = (INode &) @0x6000665b0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029430, 
  m_size = 5
}
$774 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1080, 
    static m_debug = false, 
    static m_constructor_calls = 65, 
    static m_copy_constr_calls = 126, 
    static m_destructor_calls = 126, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029450
}
$775 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$776 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 65, 
    static m_copy_constr_calls = 126, 
    static m_destructor_calls = 126, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$777 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$778 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 65, 
    static m_copy_constr_calls = 126, 
    static m_destructor_calls = 126, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$779 = (INode &) @0x600066920: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029560, 
  m_size = 7
}
$780 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1160, 
    static m_debug = false, 
    static m_constructor_calls = 65, 
    static m_copy_constr_calls = 126, 
    static m_destructor_calls = 126, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029580
}
$781 = (INode &) @0x600066a70: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029580, 
  m_size = 8
}
$782 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1170, 
    static m_debug = false, 
    static m_constructor_calls = 65, 
    static m_copy_constr_calls = 126, 
    static m_destructor_calls = 126, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000295a0
}
$783 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$784 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 65, 
    static m_copy_constr_calls = 126, 
    static m_destructor_calls = 126, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$785 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 13
}
$786 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 65, 
    static m_copy_constr_calls = 126, 
    static m_destructor_calls = 126, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 64
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (9) : 1080 1090 1100 1110 1120 1130 1140 1150 1160 
2 (6) : 1170 1180 1190 1200 1210 1220 
3 (6) : 1230 1240 1250 1260 1270 1280 
4 (7) : 1290 1300 1310 1320 1330 1340 1350 
5 (8) : 1360 1370 1380 1390 1400 1410 1420 1430 
6 (6) : 1440 1450 1460 1470 1480 1490 
7 (14) : 1500 1510 1520 1530 1540 1550 1560 1570 1580 1590 1600 1610 1620 1630 
$787 = void
$788 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$789 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 66, 
    static m_copy_constr_calls = 128, 
    static m_destructor_calls = 128, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$790 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 9
}
$791 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 66, 
    static m_copy_constr_calls = 128, 
    static m_destructor_calls = 128, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$792 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$793 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 66, 
    static m_copy_constr_calls = 128, 
    static m_destructor_calls = 128, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$794 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$795 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 66, 
    static m_copy_constr_calls = 128, 
    static m_destructor_calls = 128, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$796 = (INode &) @0x600066920: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029560, 
  m_size = 7
}
$797 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1160, 
    static m_debug = false, 
    static m_constructor_calls = 66, 
    static m_copy_constr_calls = 128, 
    static m_destructor_calls = 128, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029580
}
$798 = (INode &) @0x600066a70: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029580, 
  m_size = 8
}
$799 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1170, 
    static m_debug = false, 
    static m_constructor_calls = 66, 
    static m_copy_constr_calls = 128, 
    static m_destructor_calls = 128, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000295a0
}
$800 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$801 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 66, 
    static m_copy_constr_calls = 128, 
    static m_destructor_calls = 128, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$802 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 14
}
$803 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 66, 
    static m_copy_constr_calls = 128, 
    static m_destructor_calls = 128, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 65
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (9) : 1080 1090 1100 1110 1120 1130 1140 1150 1160 
2 (6) : 1170 1180 1190 1200 1210 1220 
3 (6) : 1230 1240 1250 1260 1270 1280 
4 (7) : 1290 1300 1310 1320 1330 1340 1350 
5 (8) : 1360 1370 1380 1390 1400 1410 1420 1430 
6 (6) : 1440 1450 1460 1470 1480 1490 
7 (15) : 1500 1510 1520 1530 1540 1550 1560 1570 1580 1590 1600 1610 1620 1630 1640 
$804 = void
$805 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$806 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 67, 
    static m_copy_constr_calls = 130, 
    static m_destructor_calls = 130, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$807 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 9
}
$808 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 67, 
    static m_copy_constr_calls = 130, 
    static m_destructor_calls = 130, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$809 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$810 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 67, 
    static m_copy_constr_calls = 130, 
    static m_destructor_calls = 130, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$811 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$812 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 67, 
    static m_copy_constr_calls = 130, 
    static m_destructor_calls = 130, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$813 = (INode &) @0x600066920: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029560, 
  m_size = 7
}
$814 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1160, 
    static m_debug = false, 
    static m_constructor_calls = 67, 
    static m_copy_constr_calls = 130, 
    static m_destructor_calls = 130, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029580
}
$815 = (INode &) @0x600066a70: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029580, 
  m_size = 8
}
$816 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1170, 
    static m_debug = false, 
    static m_constructor_calls = 67, 
    static m_copy_constr_calls = 130, 
    static m_destructor_calls = 130, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000295a0
}
$817 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$818 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 67, 
    static m_copy_constr_calls = 130, 
    static m_destructor_calls = 130, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$819 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 15
}
$820 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 67, 
    static m_copy_constr_calls = 130, 
    static m_destructor_calls = 130, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 66
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (9) : 1080 1090 1100 1110 1120 1130 1140 1150 1160 
2 (6) : 1170 1180 1190 1200 1210 1220 
3 (6) : 1230 1240 1250 1260 1270 1280 
4 (7) : 1290 1300 1310 1320 1330 1340 1350 
5 (8) : 1360 1370 1380 1390 1400 1410 1420 1430 
6 (6) : 1440 1450 1460 1470 1480 1490 
7 (16) : 1500 1510 1520 1530 1540 1550 1560 1570 1580 1590 1600 1610 1620 1630 1640 1650 
$821 = void
$822 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$823 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 68, 
    static m_copy_constr_calls = 132, 
    static m_destructor_calls = 132, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$824 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 9
}
$825 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 68, 
    static m_copy_constr_calls = 132, 
    static m_destructor_calls = 132, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$826 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$827 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 68, 
    static m_copy_constr_calls = 132, 
    static m_destructor_calls = 132, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$828 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$829 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 68, 
    static m_copy_constr_calls = 132, 
    static m_destructor_calls = 132, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$830 = (INode &) @0x600066920: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029560, 
  m_size = 7
}
$831 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1160, 
    static m_debug = false, 
    static m_constructor_calls = 68, 
    static m_copy_constr_calls = 132, 
    static m_destructor_calls = 132, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029580
}
$832 = (INode &) @0x600066a70: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029580, 
  m_size = 8
}
$833 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1170, 
    static m_debug = false, 
    static m_constructor_calls = 68, 
    static m_copy_constr_calls = 132, 
    static m_destructor_calls = 132, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000295a0
}
$834 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$835 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 68, 
    static m_copy_constr_calls = 132, 
    static m_destructor_calls = 132, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$836 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 16
}
$837 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 68, 
    static m_copy_constr_calls = 132, 
    static m_destructor_calls = 132, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 67
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (9) : 1080 1090 1100 1110 1120 1130 1140 1150 1160 
2 (6) : 1170 1180 1190 1200 1210 1220 
3 (6) : 1230 1240 1250 1260 1270 1280 
4 (7) : 1290 1300 1310 1320 1330 1340 1350 
5 (8) : 1360 1370 1380 1390 1400 1410 1420 1430 
6 (8) : 1440 1450 1460 1470 1480 1490 1500 1510 
7 (6) : 1520 1530 1540 1550 1560 1570 
8 (9) : 1580 1590 1600 1610 1620 1630 1640 1650 1660 
$838 = void
$839 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$840 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 69, 
    static m_copy_constr_calls = 134, 
    static m_destructor_calls = 134, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$841 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 9
}
$842 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 69, 
    static m_copy_constr_calls = 134, 
    static m_destructor_calls = 134, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$843 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$844 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 69, 
    static m_copy_constr_calls = 134, 
    static m_destructor_calls = 134, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$845 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$846 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 69, 
    static m_copy_constr_calls = 134, 
    static m_destructor_calls = 134, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$847 = (INode &) @0x600066920: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029560, 
  m_size = 7
}
$848 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1160, 
    static m_debug = false, 
    static m_constructor_calls = 69, 
    static m_copy_constr_calls = 134, 
    static m_destructor_calls = 134, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029580
}
$849 = (INode &) @0x600066a70: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029580, 
  m_size = 8
}
$850 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1170, 
    static m_debug = false, 
    static m_constructor_calls = 69, 
    static m_copy_constr_calls = 134, 
    static m_destructor_calls = 134, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000295a0
}
$851 = (INode &) @0x600066ba0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029580, 
  m_size = 8
}
$852 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1170, 
    static m_debug = false, 
    static m_constructor_calls = 69, 
    static m_copy_constr_calls = 134, 
    static m_destructor_calls = 134, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000295a0
}
$853 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$854 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 69, 
    static m_copy_constr_calls = 134, 
    static m_destructor_calls = 134, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$855 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 9
}
$856 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 69, 
    static m_copy_constr_calls = 134, 
    static m_destructor_calls = 134, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 68
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (9) : 1080 1090 1100 1110 1120 1130 1140 1150 1160 
2 (6) : 1170 1180 1190 1200 1210 1220 
3 (6) : 1230 1240 1250 1260 1270 1280 
4 (7) : 1290 1300 1310 1320 1330 1340 1350 
5 (8) : 1360 1370 1380 1390 1400 1410 1420 1430 
6 (8) : 1440 1450 1460 1470 1480 1490 1500 1510 
7 (6) : 1520 1530 1540 1550 1560 1570 
8 (10) : 1580 1590 1600 1610 1620 1630 1640 1650 1660 1670 
$857 = void
$858 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$859 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 70, 
    static m_copy_constr_calls = 136, 
    static m_destructor_calls = 136, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$860 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 9
}
$861 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 70, 
    static m_copy_constr_calls = 136, 
    static m_destructor_calls = 136, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$862 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$863 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 70, 
    static m_copy_constr_calls = 136, 
    static m_destructor_calls = 136, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$864 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$865 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 70, 
    static m_copy_constr_calls = 136, 
    static m_destructor_calls = 136, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$866 = (INode &) @0x600066920: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029560, 
  m_size = 7
}
$867 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1160, 
    static m_debug = false, 
    static m_constructor_calls = 70, 
    static m_copy_constr_calls = 136, 
    static m_destructor_calls = 136, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029580
}
$868 = (INode &) @0x600066a70: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029580, 
  m_size = 8
}
$869 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1170, 
    static m_debug = false, 
    static m_constructor_calls = 70, 
    static m_copy_constr_calls = 136, 
    static m_destructor_calls = 136, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000295a0
}
$870 = (INode &) @0x600066ba0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029580, 
  m_size = 8
}
$871 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1170, 
    static m_debug = false, 
    static m_constructor_calls = 70, 
    static m_copy_constr_calls = 136, 
    static m_destructor_calls = 136, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000295a0
}
$872 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$873 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 70, 
    static m_copy_constr_calls = 136, 
    static m_destructor_calls = 136, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$874 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 10
}
$875 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 70, 
    static m_copy_constr_calls = 136, 
    static m_destructor_calls = 136, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 69
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (9) : 1080 1090 1100 1110 1120 1130 1140 1150 1160 
2 (6) : 1170 1180 1190 1200 1210 1220 
3 (6) : 1230 1240 1250 1260 1270 1280 
4 (7) : 1290 1300 1310 1320 1330 1340 1350 
5 (8) : 1360 1370 1380 1390 1400 1410 1420 1430 
6 (8) : 1440 1450 1460 1470 1480 1490 1500 1510 
7 (6) : 1520 1530 1540 1550 1560 1570 
8 (11) : 1580 1590 1600 1610 1620 1630 1640 1650 1660 1670 1680 
$876 = void
$877 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$878 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 71, 
    static m_copy_constr_calls = 138, 
    static m_destructor_calls = 138, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$879 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 9
}
$880 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 71, 
    static m_copy_constr_calls = 138, 
    static m_destructor_calls = 138, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$881 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$882 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 71, 
    static m_copy_constr_calls = 138, 
    static m_destructor_calls = 138, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$883 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$884 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 71, 
    static m_copy_constr_calls = 138, 
    static m_destructor_calls = 138, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$885 = (INode &) @0x600066920: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029560, 
  m_size = 7
}
$886 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1160, 
    static m_debug = false, 
    static m_constructor_calls = 71, 
    static m_copy_constr_calls = 138, 
    static m_destructor_calls = 138, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029580
}
$887 = (INode &) @0x600066a70: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029580, 
  m_size = 8
}
$888 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1170, 
    static m_debug = false, 
    static m_constructor_calls = 71, 
    static m_copy_constr_calls = 138, 
    static m_destructor_calls = 138, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000295a0
}
$889 = (INode &) @0x600066ba0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029580, 
  m_size = 8
}
$890 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1170, 
    static m_debug = false, 
    static m_constructor_calls = 71, 
    static m_copy_constr_calls = 138, 
    static m_destructor_calls = 138, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x6000295a0
}
$891 = (INode &) @0x6000666c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029450, 
  m_size = 6
}
$892 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1090, 
    static m_debug = false, 
    static m_constructor_calls = 71, 
    static m_copy_constr_calls = 138, 
    static m_destructor_calls = 138, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029470
}
$893 = (INode &) @0x6000294c0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 11
}
$894 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 71, 
    static m_copy_constr_calls = 138, 
    static m_destructor_calls = 138, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}

Breakpoint 1, SqList::add (this=0xffffca80, data=...) at SqList.cpp:68
68	    if (!m_size++) {

----- SqList dump() -----
number of items = 70
-------------------------
0 (8) : 1000 1010 1020 1030 1040 1050 1060 1070 
1 (9) : 1080 1090 1100 1110 1120 1130 1140 1150 1160 
2 (6) : 1170 1180 1190 1200 1210 1220 
3 (6) : 1230 1240 1250 1260 1270 1280 
4 (7) : 1290 1300 1310 1320 1330 1340 1350 
5 (8) : 1360 1370 1380 1390 1400 1410 1420 1430 
6 (8) : 1440 1450 1460 1470 1480 1490 1500 1510 
7 (6) : 1520 1530 1540 1550 1560 1570 
8 (12) : 1580 1590 1600 1610 1620 1630 1640 1650 1660 1670 1680 1690 
$895 = void
$896 = (INode &) @0x600029410: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029330, 
  m_size = 8
}
$897 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1030, 
    static m_debug = false, 
    static m_constructor_calls = 72, 
    static m_copy_constr_calls = 140, 
    static m_destructor_calls = 140, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029380
}
$898 = (INode &) @0x6000295f0: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x6000293e0, 
  m_size = 9
}
$899 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1070, 
    static m_debug = false, 
    static m_constructor_calls = 72, 
    static m_copy_constr_calls = 140, 
    static m_destructor_calls = 140, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029430
}
$900 = (INode &) @0x600029280: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}
$901 = (DNode) {
  _vptr.DNode = 0x1004065e0 <vtable for DNode+16>, 
  m_data = {
    m_data = 1150, 
    static m_debug = false, 
    static m_constructor_calls = 72, 
    static m_copy_constr_calls = 140, 
    static m_destructor_calls = 140, 
    static m_assignment_calls = 0
  }, 
  m_next = 0x600029560
}
$902 = (INode &) @0x600066810: {
  _vptr.INode = 0x100406600 <vtable for INode+16>, 
  m_dNode = 0x600029540, 
  m_size = 6
}

Program received signal SIGSEGV, Segmentation fault.
0x00000000ffffc860 in ?? ()
(gdb) q
A debugging session is active.

	Inferior 1 [process 12600] will be killed.

Quit anyway? (y or n) y
